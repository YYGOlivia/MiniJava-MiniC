LOADL 0
;print int pgcd( < int, int> c ){
;int a = (fstc);
;int b = (sndc);
;while (((a * b) != test) ){
;if ((a > b) ){
;int na = (a - b);
; a  = na;
;}
; else {
;int nb = (b - a);
; b  = nb;
;}
;}
;int res = a;
;if ((res == test) ){
; res  = b;
;}
;// Return in function : pgcd
;return res;
;}
;( { 47 ,53 });
LOADL 47
LOADL 53
CALL (SB) pgcd
SUBR IOut
HALT
;int a = (fstc);
;
pgcd
PUSH 1
LOAD (2) -2[LB]
POP (0) 1
STORE (1) 3[LB]
;int b = (sndc);
;
PUSH 1
LOAD (2) -2[LB]
POP (1) 1
STORE (1) 4[LB]
debut_boucle_1
LOAD (1) 3[LB]
LOAD (1) 4[LB]
SUBR IMul
LOADL 0
SUBR INeq
JUMPIF (0) fin_boucle_1
LOAD (1) 3[LB]
LOAD (1) 4[LB]
SUBR IGtr
JUMPIF (0) sinon_conditionnelle_2
;int na = (a - b);
;
PUSH 1
LOAD (1) 3[LB]
LOAD (1) 4[LB]
SUBR ISub
STORE (1) 5[LB]
; a  = na;
;
LOAD (1) 5[LB]
STORE (1) 3[LB]
JUMP fin_conditionnelle_2
;int nb = (b - a);
;
sinon_conditionnelle_2
PUSH 1
LOAD (1) 4[LB]
LOAD (1) 3[LB]
SUBR ISub
STORE (1) 5[LB]
; b  = nb;
;
LOAD (1) 5[LB]
STORE (1) 4[LB]
fin_conditionnelle_2
JUMP debut_boucle_1
fin_boucle_1
;int res = a;
;
PUSH 1
LOAD (1) 3[LB]
STORE (1) 5[LB]
LOAD (1) 5[LB]
LOADL 0
SUBR IEq
JUMPIF (0) fin_conditionnelle_3
; res  = b;
;
LOAD (1) 4[LB]
STORE (1) 5[LB]
fin_conditionnelle_3
;// Return in function : pgcd
;return res;
;
LOAD (1) 5[LB]
RETURN (1) 2

